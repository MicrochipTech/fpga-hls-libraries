#include <stdint.h>

const uint16_t test1PatternRe[256] = {  
  0x6665,   //     0 26213 = (26213+0j)
  0x6646,   //  1286 26182 = (26182+1286j)
  0x65E7,   //  2569 26087 = (26087+2569j)
  0x6549,   //  3846 25929 = (25929+3846j)
  0x646D,   //  5114 25709 = (25709+5114j)
  0x6354,   //  6369 25428 = (25428+6369j)
  0x61FC,   //  7609 25084 = (25084+7609j)
  0x6069,   //  8831 24681 = (24681+8831j)
  0x5E9A,   // 10031 24218 = (24218+10031j)
  0x5C90,   // 11207 23696 = (23696+11207j)
  0x5A4E,   // 12357 23118 = (23118+12357j)
  0x57D4,   // 13476 22484 = (22484+13476j)
  0x5523,   // 14563 21795 = (21795+14563j)
  0x523E,   // 15615 21054 = (21054+15615j)
  0x4F27,   // 16629 20263 = (20263+16629j)
  0x4BDE,   // 17603 19422 = (19422+17603j)
  0x4867,   // 18535 18535 = (18535+18535j)
  0x44C3,   // 19422 17603 = (17603+19422j)
  0x40F5,   // 20263 16629 = (16629+20263j)
  0x3CFF,   // 21054 15615 = (15615+21054j)
  0x38E3,   // 21795 14563 = (14563+21795j)
  0x34A4,   // 22484 13476 = (13476+22484j)
  0x3045,   // 23118 12357 = (12357+23118j)
  0x2BC7,   // 23696 11207 = (11207+23696j)
  0x272F,   // 24218 10031 = (10031+24218j)
  0x227F,   // 24681  8831 = (8831+24681j)
  0x1DB9,   // 25084  7609 = (7609+25084j)
  0x18E1,   // 25428  6369 = (6369+25428j)
  0x13FA,   // 25709  5114 = (5114+25709j)
  0x0F06,   // 25929  3846 = (3846+25929j)
  0x0A09,   // 26087  2569 = (2569+26087j)
  0x0506,   // 26182  1286 = (1286+26182j)
  0x0000,   // 26213     0 = 26213j
  0xFAFA,   // 26182 -1286 = (-1286+26182j)
  0xF5F7,   // 26087 -2569 = (-2569+26087j)
  0xF0FA,   // 25929 -3846 = (-3846+25929j)
  0xEC06,   // 25709 -5114 = (-5114+25709j)
  0xE71F,   // 25428 -6369 = (-6369+25428j)
  0xE247,   // 25084 -7609 = (-7609+25084j)
  0xDD81,   // 24681 -8831 = (-8831+24681j)
  0xD8D1,   // 24218 -10031 = (-10031+24218j)
  0xD439,   // 23696 -11207 = (-11207+23696j)
  0xCFBB,   // 23118 -12357 = (-12357+23118j)
  0xCB5C,   // 22484 -13476 = (-13476+22484j)
  0xC71D,   // 21795 -14563 = (-14563+21795j)
  0xC301,   // 21054 -15615 = (-15615+21054j)
  0xBF0B,   // 20263 -16629 = (-16629+20263j)
  0xBB3D,   // 19422 -17603 = (-17603+19422j)
  0xB799,   // 18535 -18535 = (-18535+18535j)
  0xB422,   // 17603 -19422 = (-19422+17603j)
  0xB0D9,   // 16629 -20263 = (-20263+16629j)
  0xADC2,   // 15615 -21054 = (-21054+15615j)
  0xAADD,   // 14563 -21795 = (-21795+14563j)
  0xA82C,   // 13476 -22484 = (-22484+13476j)
  0xA5B2,   // 12357 -23118 = (-23118+12357j)
  0xA370,   // 11207 -23696 = (-23696+11207j)
  0xA166,   // 10031 -24218 = (-24218+10031j)
  0x9F97,   //  8831 -24681 = (-24681+8831j)
  0x9E04,   //  7609 -25084 = (-25084+7609j)
  0x9CAC,   //  6369 -25428 = (-25428+6369j)
  0x9B93,   //  5114 -25709 = (-25709+5114j)
  0x9AB7,   //  3846 -25929 = (-25929+3846j)
  0x9A19,   //  2569 -26087 = (-26087+2569j)
  0x99BA,   //  1286 -26182 = (-26182+1286j)
  0x999B,   //     0 -26213 = (-26213+0j)
  0x99BA,   // -1286 -26182 = (-26182-1286j)
  0x9A19,   // -2569 -26087 = (-26087-2569j)
  0x9AB7,   // -3846 -25929 = (-25929-3846j)
  0x9B93,   // -5114 -25709 = (-25709-5114j)
  0x9CAC,   // -6369 -25428 = (-25428-6369j)
  0x9E04,   // -7609 -25084 = (-25084-7609j)
  0x9F97,   // -8831 -24681 = (-24681-8831j)
  0xA166,   // -10031 -24218 = (-24218-10031j)
  0xA370,   // -11207 -23696 = (-23696-11207j)
  0xA5B2,   // -12357 -23118 = (-23118-12357j)
  0xA82C,   // -13476 -22484 = (-22484-13476j)
  0xAADD,   // -14563 -21795 = (-21795-14563j)
  0xADC2,   // -15615 -21054 = (-21054-15615j)
  0xB0D9,   // -16629 -20263 = (-20263-16629j)
  0xB422,   // -17603 -19422 = (-19422-17603j)
  0xB799,   // -18535 -18535 = (-18535-18535j)
  0xBB3D,   // -19422 -17603 = (-17603-19422j)
  0xBF0B,   // -20263 -16629 = (-16629-20263j)
  0xC301,   // -21054 -15615 = (-15615-21054j)
  0xC71D,   // -21795 -14563 = (-14563-21795j)
  0xCB5C,   // -22484 -13476 = (-13476-22484j)
  0xCFBB,   // -23118 -12357 = (-12357-23118j)
  0xD439,   // -23696 -11207 = (-11207-23696j)
  0xD8D1,   // -24218 -10031 = (-10031-24218j)
  0xDD81,   // -24681 -8831 = (-8831-24681j)
  0xE247,   // -25084 -7609 = (-7609-25084j)
  0xE71F,   // -25428 -6369 = (-6369-25428j)
  0xEC06,   // -25709 -5114 = (-5114-25709j)
  0xF0FA,   // -25929 -3846 = (-3846-25929j)
  0xF5F7,   // -26087 -2569 = (-2569-26087j)
  0xFAFA,   // -26182 -1286 = (-1286-26182j)
  0x0000,   // -26213     0 = -26213j
  0x0506,   // -26182  1286 = (1286-26182j)
  0x0A09,   // -26087  2569 = (2569-26087j)
  0x0F06,   // -25929  3846 = (3846-25929j)
  0x13FA,   // -25709  5114 = (5114-25709j)
  0x18E1,   // -25428  6369 = (6369-25428j)
  0x1DB9,   // -25084  7609 = (7609-25084j)
  0x227F,   // -24681  8831 = (8831-24681j)
  0x272F,   // -24218 10031 = (10031-24218j)
  0x2BC7,   // -23696 11207 = (11207-23696j)
  0x3045,   // -23118 12357 = (12357-23118j)
  0x34A4,   // -22484 13476 = (13476-22484j)
  0x38E3,   // -21795 14563 = (14563-21795j)
  0x3CFF,   // -21054 15615 = (15615-21054j)
  0x40F5,   // -20263 16629 = (16629-20263j)
  0x44C3,   // -19422 17603 = (17603-19422j)
  0x4867,   // -18535 18535 = (18535-18535j)
  0x4BDE,   // -17603 19422 = (19422-17603j)
  0x4F27,   // -16629 20263 = (20263-16629j)
  0x523E,   // -15615 21054 = (21054-15615j)
  0x5523,   // -14563 21795 = (21795-14563j)
  0x57D4,   // -13476 22484 = (22484-13476j)
  0x5A4E,   // -12357 23118 = (23118-12357j)
  0x5C90,   // -11207 23696 = (23696-11207j)
  0x5E9A,   // -10031 24218 = (24218-10031j)
  0x6069,   // -8831 24681 = (24681-8831j)
  0x61FC,   // -7609 25084 = (25084-7609j)
  0x6354,   // -6369 25428 = (25428-6369j)
  0x646D,   // -5114 25709 = (25709-5114j)
  0x6549,   // -3846 25929 = (25929-3846j)
  0x65E7,   // -2569 26087 = (26087-2569j)
  0x6646,   // -1286 26182 = (26182-1286j)
  0x6665,   //     0 26213 = (26213+0j)
  0x6646,   //  1286 26182 = (26182+1286j)
  0x65E7,   //  2569 26087 = (26087+2569j)
  0x6549,   //  3846 25929 = (25929+3846j)
  0x646D,   //  5114 25709 = (25709+5114j)
  0x6354,   //  6369 25428 = (25428+6369j)
  0x61FC,   //  7609 25084 = (25084+7609j)
  0x6069,   //  8831 24681 = (24681+8831j)
  0x5E9A,   // 10031 24218 = (24218+10031j)
  0x5C90,   // 11207 23696 = (23696+11207j)
  0x5A4E,   // 12357 23118 = (23118+12357j)
  0x57D4,   // 13476 22484 = (22484+13476j)
  0x5523,   // 14563 21795 = (21795+14563j)
  0x523E,   // 15615 21054 = (21054+15615j)
  0x4F27,   // 16629 20263 = (20263+16629j)
  0x4BDE,   // 17603 19422 = (19422+17603j)
  0x4867,   // 18535 18535 = (18535+18535j)
  0x44C3,   // 19422 17603 = (17603+19422j)
  0x40F5,   // 20263 16629 = (16629+20263j)
  0x3CFF,   // 21054 15615 = (15615+21054j)
  0x38E3,   // 21795 14563 = (14563+21795j)
  0x34A4,   // 22484 13476 = (13476+22484j)
  0x3045,   // 23118 12357 = (12357+23118j)
  0x2BC7,   // 23696 11207 = (11207+23696j)
  0x272F,   // 24218 10031 = (10031+24218j)
  0x227F,   // 24681  8831 = (8831+24681j)
  0x1DB9,   // 25084  7609 = (7609+25084j)
  0x18E1,   // 25428  6369 = (6369+25428j)
  0x13FA,   // 25709  5114 = (5114+25709j)
  0x0F06,   // 25929  3846 = (3846+25929j)
  0x0A09,   // 26087  2569 = (2569+26087j)
  0x0506,   // 26182  1286 = (1286+26182j)
  0x0000,   // 26213     0 = 26213j
  0xFAFA,   // 26182 -1286 = (-1286+26182j)
  0xF5F7,   // 26087 -2569 = (-2569+26087j)
  0xF0FA,   // 25929 -3846 = (-3846+25929j)
  0xEC06,   // 25709 -5114 = (-5114+25709j)
  0xE71F,   // 25428 -6369 = (-6369+25428j)
  0xE247,   // 25084 -7609 = (-7609+25084j)
  0xDD81,   // 24681 -8831 = (-8831+24681j)
  0xD8D1,   // 24218 -10031 = (-10031+24218j)
  0xD439,   // 23696 -11207 = (-11207+23696j)
  0xCFBB,   // 23118 -12357 = (-12357+23118j)
  0xCB5C,   // 22484 -13476 = (-13476+22484j)
  0xC71D,   // 21795 -14563 = (-14563+21795j)
  0xC301,   // 21054 -15615 = (-15615+21054j)
  0xBF0B,   // 20263 -16629 = (-16629+20263j)
  0xBB3D,   // 19422 -17603 = (-17603+19422j)
  0xB799,   // 18535 -18535 = (-18535+18535j)
  0xB422,   // 17603 -19422 = (-19422+17603j)
  0xB0D9,   // 16629 -20263 = (-20263+16629j)
  0xADC2,   // 15615 -21054 = (-21054+15615j)
  0xAADD,   // 14563 -21795 = (-21795+14563j)
  0xA82C,   // 13476 -22484 = (-22484+13476j)
  0xA5B2,   // 12357 -23118 = (-23118+12357j)
  0xA370,   // 11207 -23696 = (-23696+11207j)
  0xA166,   // 10031 -24218 = (-24218+10031j)
  0x9F97,   //  8831 -24681 = (-24681+8831j)
  0x9E04,   //  7609 -25084 = (-25084+7609j)
  0x9CAC,   //  6369 -25428 = (-25428+6369j)
  0x9B93,   //  5114 -25709 = (-25709+5114j)
  0x9AB7,   //  3846 -25929 = (-25929+3846j)
  0x9A19,   //  2569 -26087 = (-26087+2569j)
  0x99BA,   //  1286 -26182 = (-26182+1286j)
  0x999B,   //     0 -26213 = (-26213+0j)
  0x99BA,   // -1286 -26182 = (-26182-1286j)
  0x9A19,   // -2569 -26087 = (-26087-2569j)
  0x9AB7,   // -3846 -25929 = (-25929-3846j)
  0x9B93,   // -5114 -25709 = (-25709-5114j)
  0x9CAC,   // -6369 -25428 = (-25428-6369j)
  0x9E04,   // -7609 -25084 = (-25084-7609j)
  0x9F97,   // -8831 -24681 = (-24681-8831j)
  0xA166,   // -10031 -24218 = (-24218-10031j)
  0xA370,   // -11207 -23696 = (-23696-11207j)
  0xA5B2,   // -12357 -23118 = (-23118-12357j)
  0xA82C,   // -13476 -22484 = (-22484-13476j)
  0xAADD,   // -14563 -21795 = (-21795-14563j)
  0xADC2,   // -15615 -21054 = (-21054-15615j)
  0xB0D9,   // -16629 -20263 = (-20263-16629j)
  0xB422,   // -17603 -19422 = (-19422-17603j)
  0xB799,   // -18535 -18535 = (-18535-18535j)
  0xBB3D,   // -19422 -17603 = (-17603-19422j)
  0xBF0B,   // -20263 -16629 = (-16629-20263j)
  0xC301,   // -21054 -15615 = (-15615-21054j)
  0xC71D,   // -21795 -14563 = (-14563-21795j)
  0xCB5C,   // -22484 -13476 = (-13476-22484j)
  0xCFBB,   // -23118 -12357 = (-12357-23118j)
  0xD439,   // -23696 -11207 = (-11207-23696j)
  0xD8D1,   // -24218 -10031 = (-10031-24218j)
  0xDD81,   // -24681 -8831 = (-8831-24681j)
  0xE247,   // -25084 -7609 = (-7609-25084j)
  0xE71F,   // -25428 -6369 = (-6369-25428j)
  0xEC06,   // -25709 -5114 = (-5114-25709j)
  0xF0FA,   // -25929 -3846 = (-3846-25929j)
  0xF5F7,   // -26087 -2569 = (-2569-26087j)
  0xFAFA,   // -26182 -1286 = (-1286-26182j)
  0x0000,   // -26213     0 = -26213j
  0x0506,   // -26182  1286 = (1286-26182j)
  0x0A09,   // -26087  2569 = (2569-26087j)
  0x0F06,   // -25929  3846 = (3846-25929j)
  0x13FA,   // -25709  5114 = (5114-25709j)
  0x18E1,   // -25428  6369 = (6369-25428j)
  0x1DB9,   // -25084  7609 = (7609-25084j)
  0x227F,   // -24681  8831 = (8831-24681j)
  0x272F,   // -24218 10031 = (10031-24218j)
  0x2BC7,   // -23696 11207 = (11207-23696j)
  0x3045,   // -23118 12357 = (12357-23118j)
  0x34A4,   // -22484 13476 = (13476-22484j)
  0x38E3,   // -21795 14563 = (14563-21795j)
  0x3CFF,   // -21054 15615 = (15615-21054j)
  0x40F5,   // -20263 16629 = (16629-20263j)
  0x44C3,   // -19422 17603 = (17603-19422j)
  0x4867,   // -18535 18535 = (18535-18535j)
  0x4BDE,   // -17603 19422 = (19422-17603j)
  0x4F27,   // -16629 20263 = (20263-16629j)
  0x523E,   // -15615 21054 = (21054-15615j)
  0x5523,   // -14563 21795 = (21795-14563j)
  0x57D4,   // -13476 22484 = (22484-13476j)
  0x5A4E,   // -12357 23118 = (23118-12357j)
  0x5C90,   // -11207 23696 = (23696-11207j)
  0x5E9A,   // -10031 24218 = (24218-10031j)
  0x6069,   // -8831 24681 = (24681-8831j)
  0x61FC,   // -7609 25084 = (25084-7609j)
  0x6354,   // -6369 25428 = (25428-6369j)
  0x646D,   // -5114 25709 = (25709-5114j)
  0x6549,   // -3846 25929 = (25929-3846j)
  0x65E7,   // -2569 26087 = (26087-2569j)
  0x6646,   // -1286 26182 = (26182-1286j)
};

const uint16_t test1PatternIm[256] = {  
  0x0000,   //     0 26213 = (26213+0j)
  0x0506,   //  1286 26182 = (26182+1286j)
  0x0A09,   //  2569 26087 = (26087+2569j)
  0x0F06,   //  3846 25929 = (25929+3846j)
  0x13FA,   //  5114 25709 = (25709+5114j)
  0x18E1,   //  6369 25428 = (25428+6369j)
  0x1DB9,   //  7609 25084 = (25084+7609j)
  0x227F,   //  8831 24681 = (24681+8831j)
  0x272F,   // 10031 24218 = (24218+10031j)
  0x2BC7,   // 11207 23696 = (23696+11207j)
  0x3045,   // 12357 23118 = (23118+12357j)
  0x34A4,   // 13476 22484 = (22484+13476j)
  0x38E3,   // 14563 21795 = (21795+14563j)
  0x3CFF,   // 15615 21054 = (21054+15615j)
  0x40F5,   // 16629 20263 = (20263+16629j)
  0x44C3,   // 17603 19422 = (19422+17603j)
  0x4867,   // 18535 18535 = (18535+18535j)
  0x4BDE,   // 19422 17603 = (17603+19422j)
  0x4F27,   // 20263 16629 = (16629+20263j)
  0x523E,   // 21054 15615 = (15615+21054j)
  0x5523,   // 21795 14563 = (14563+21795j)
  0x57D4,   // 22484 13476 = (13476+22484j)
  0x5A4E,   // 23118 12357 = (12357+23118j)
  0x5C90,   // 23696 11207 = (11207+23696j)
  0x5E9A,   // 24218 10031 = (10031+24218j)
  0x6069,   // 24681  8831 = (8831+24681j)
  0x61FC,   // 25084  7609 = (7609+25084j)
  0x6354,   // 25428  6369 = (6369+25428j)
  0x646D,   // 25709  5114 = (5114+25709j)
  0x6549,   // 25929  3846 = (3846+25929j)
  0x65E7,   // 26087  2569 = (2569+26087j)
  0x6646,   // 26182  1286 = (1286+26182j)
  0x6665,   // 26213     0 = 26213j
  0x6646,   // 26182 -1286 = (-1286+26182j)
  0x65E7,   // 26087 -2569 = (-2569+26087j)
  0x6549,   // 25929 -3846 = (-3846+25929j)
  0x646D,   // 25709 -5114 = (-5114+25709j)
  0x6354,   // 25428 -6369 = (-6369+25428j)
  0x61FC,   // 25084 -7609 = (-7609+25084j)
  0x6069,   // 24681 -8831 = (-8831+24681j)
  0x5E9A,   // 24218 -10031 = (-10031+24218j)
  0x5C90,   // 23696 -11207 = (-11207+23696j)
  0x5A4E,   // 23118 -12357 = (-12357+23118j)
  0x57D4,   // 22484 -13476 = (-13476+22484j)
  0x5523,   // 21795 -14563 = (-14563+21795j)
  0x523E,   // 21054 -15615 = (-15615+21054j)
  0x4F27,   // 20263 -16629 = (-16629+20263j)
  0x4BDE,   // 19422 -17603 = (-17603+19422j)
  0x4867,   // 18535 -18535 = (-18535+18535j)
  0x44C3,   // 17603 -19422 = (-19422+17603j)
  0x40F5,   // 16629 -20263 = (-20263+16629j)
  0x3CFF,   // 15615 -21054 = (-21054+15615j)
  0x38E3,   // 14563 -21795 = (-21795+14563j)
  0x34A4,   // 13476 -22484 = (-22484+13476j)
  0x3045,   // 12357 -23118 = (-23118+12357j)
  0x2BC7,   // 11207 -23696 = (-23696+11207j)
  0x272F,   // 10031 -24218 = (-24218+10031j)
  0x227F,   //  8831 -24681 = (-24681+8831j)
  0x1DB9,   //  7609 -25084 = (-25084+7609j)
  0x18E1,   //  6369 -25428 = (-25428+6369j)
  0x13FA,   //  5114 -25709 = (-25709+5114j)
  0x0F06,   //  3846 -25929 = (-25929+3846j)
  0x0A09,   //  2569 -26087 = (-26087+2569j)
  0x0506,   //  1286 -26182 = (-26182+1286j)
  0x0000,   //     0 -26213 = (-26213+0j)
  0xFAFA,   // -1286 -26182 = (-26182-1286j)
  0xF5F7,   // -2569 -26087 = (-26087-2569j)
  0xF0FA,   // -3846 -25929 = (-25929-3846j)
  0xEC06,   // -5114 -25709 = (-25709-5114j)
  0xE71F,   // -6369 -25428 = (-25428-6369j)
  0xE247,   // -7609 -25084 = (-25084-7609j)
  0xDD81,   // -8831 -24681 = (-24681-8831j)
  0xD8D1,   // -10031 -24218 = (-24218-10031j)
  0xD439,   // -11207 -23696 = (-23696-11207j)
  0xCFBB,   // -12357 -23118 = (-23118-12357j)
  0xCB5C,   // -13476 -22484 = (-22484-13476j)
  0xC71D,   // -14563 -21795 = (-21795-14563j)
  0xC301,   // -15615 -21054 = (-21054-15615j)
  0xBF0B,   // -16629 -20263 = (-20263-16629j)
  0xBB3D,   // -17603 -19422 = (-19422-17603j)
  0xB799,   // -18535 -18535 = (-18535-18535j)
  0xB422,   // -19422 -17603 = (-17603-19422j)
  0xB0D9,   // -20263 -16629 = (-16629-20263j)
  0xADC2,   // -21054 -15615 = (-15615-21054j)
  0xAADD,   // -21795 -14563 = (-14563-21795j)
  0xA82C,   // -22484 -13476 = (-13476-22484j)
  0xA5B2,   // -23118 -12357 = (-12357-23118j)
  0xA370,   // -23696 -11207 = (-11207-23696j)
  0xA166,   // -24218 -10031 = (-10031-24218j)
  0x9F97,   // -24681 -8831 = (-8831-24681j)
  0x9E04,   // -25084 -7609 = (-7609-25084j)
  0x9CAC,   // -25428 -6369 = (-6369-25428j)
  0x9B93,   // -25709 -5114 = (-5114-25709j)
  0x9AB7,   // -25929 -3846 = (-3846-25929j)
  0x9A19,   // -26087 -2569 = (-2569-26087j)
  0x99BA,   // -26182 -1286 = (-1286-26182j)
  0x999B,   // -26213     0 = -26213j
  0x99BA,   // -26182  1286 = (1286-26182j)
  0x9A19,   // -26087  2569 = (2569-26087j)
  0x9AB7,   // -25929  3846 = (3846-25929j)
  0x9B93,   // -25709  5114 = (5114-25709j)
  0x9CAC,   // -25428  6369 = (6369-25428j)
  0x9E04,   // -25084  7609 = (7609-25084j)
  0x9F97,   // -24681  8831 = (8831-24681j)
  0xA166,   // -24218 10031 = (10031-24218j)
  0xA370,   // -23696 11207 = (11207-23696j)
  0xA5B2,   // -23118 12357 = (12357-23118j)
  0xA82C,   // -22484 13476 = (13476-22484j)
  0xAADD,   // -21795 14563 = (14563-21795j)
  0xADC2,   // -21054 15615 = (15615-21054j)
  0xB0D9,   // -20263 16629 = (16629-20263j)
  0xB422,   // -19422 17603 = (17603-19422j)
  0xB799,   // -18535 18535 = (18535-18535j)
  0xBB3D,   // -17603 19422 = (19422-17603j)
  0xBF0B,   // -16629 20263 = (20263-16629j)
  0xC301,   // -15615 21054 = (21054-15615j)
  0xC71D,   // -14563 21795 = (21795-14563j)
  0xCB5C,   // -13476 22484 = (22484-13476j)
  0xCFBB,   // -12357 23118 = (23118-12357j)
  0xD439,   // -11207 23696 = (23696-11207j)
  0xD8D1,   // -10031 24218 = (24218-10031j)
  0xDD81,   // -8831 24681 = (24681-8831j)
  0xE247,   // -7609 25084 = (25084-7609j)
  0xE71F,   // -6369 25428 = (25428-6369j)
  0xEC06,   // -5114 25709 = (25709-5114j)
  0xF0FA,   // -3846 25929 = (25929-3846j)
  0xF5F7,   // -2569 26087 = (26087-2569j)
  0xFAFA,   // -1286 26182 = (26182-1286j)
  0x0000,   //     0 26213 = (26213+0j)
  0x0506,   //  1286 26182 = (26182+1286j)
  0x0A09,   //  2569 26087 = (26087+2569j)
  0x0F06,   //  3846 25929 = (25929+3846j)
  0x13FA,   //  5114 25709 = (25709+5114j)
  0x18E1,   //  6369 25428 = (25428+6369j)
  0x1DB9,   //  7609 25084 = (25084+7609j)
  0x227F,   //  8831 24681 = (24681+8831j)
  0x272F,   // 10031 24218 = (24218+10031j)
  0x2BC7,   // 11207 23696 = (23696+11207j)
  0x3045,   // 12357 23118 = (23118+12357j)
  0x34A4,   // 13476 22484 = (22484+13476j)
  0x38E3,   // 14563 21795 = (21795+14563j)
  0x3CFF,   // 15615 21054 = (21054+15615j)
  0x40F5,   // 16629 20263 = (20263+16629j)
  0x44C3,   // 17603 19422 = (19422+17603j)
  0x4867,   // 18535 18535 = (18535+18535j)
  0x4BDE,   // 19422 17603 = (17603+19422j)
  0x4F27,   // 20263 16629 = (16629+20263j)
  0x523E,   // 21054 15615 = (15615+21054j)
  0x5523,   // 21795 14563 = (14563+21795j)
  0x57D4,   // 22484 13476 = (13476+22484j)
  0x5A4E,   // 23118 12357 = (12357+23118j)
  0x5C90,   // 23696 11207 = (11207+23696j)
  0x5E9A,   // 24218 10031 = (10031+24218j)
  0x6069,   // 24681  8831 = (8831+24681j)
  0x61FC,   // 25084  7609 = (7609+25084j)
  0x6354,   // 25428  6369 = (6369+25428j)
  0x646D,   // 25709  5114 = (5114+25709j)
  0x6549,   // 25929  3846 = (3846+25929j)
  0x65E7,   // 26087  2569 = (2569+26087j)
  0x6646,   // 26182  1286 = (1286+26182j)
  0x6665,   // 26213     0 = 26213j
  0x6646,   // 26182 -1286 = (-1286+26182j)
  0x65E7,   // 26087 -2569 = (-2569+26087j)
  0x6549,   // 25929 -3846 = (-3846+25929j)
  0x646D,   // 25709 -5114 = (-5114+25709j)
  0x6354,   // 25428 -6369 = (-6369+25428j)
  0x61FC,   // 25084 -7609 = (-7609+25084j)
  0x6069,   // 24681 -8831 = (-8831+24681j)
  0x5E9A,   // 24218 -10031 = (-10031+24218j)
  0x5C90,   // 23696 -11207 = (-11207+23696j)
  0x5A4E,   // 23118 -12357 = (-12357+23118j)
  0x57D4,   // 22484 -13476 = (-13476+22484j)
  0x5523,   // 21795 -14563 = (-14563+21795j)
  0x523E,   // 21054 -15615 = (-15615+21054j)
  0x4F27,   // 20263 -16629 = (-16629+20263j)
  0x4BDE,   // 19422 -17603 = (-17603+19422j)
  0x4867,   // 18535 -18535 = (-18535+18535j)
  0x44C3,   // 17603 -19422 = (-19422+17603j)
  0x40F5,   // 16629 -20263 = (-20263+16629j)
  0x3CFF,   // 15615 -21054 = (-21054+15615j)
  0x38E3,   // 14563 -21795 = (-21795+14563j)
  0x34A4,   // 13476 -22484 = (-22484+13476j)
  0x3045,   // 12357 -23118 = (-23118+12357j)
  0x2BC7,   // 11207 -23696 = (-23696+11207j)
  0x272F,   // 10031 -24218 = (-24218+10031j)
  0x227F,   //  8831 -24681 = (-24681+8831j)
  0x1DB9,   //  7609 -25084 = (-25084+7609j)
  0x18E1,   //  6369 -25428 = (-25428+6369j)
  0x13FA,   //  5114 -25709 = (-25709+5114j)
  0x0F06,   //  3846 -25929 = (-25929+3846j)
  0x0A09,   //  2569 -26087 = (-26087+2569j)
  0x0506,   //  1286 -26182 = (-26182+1286j)
  0x0000,   //     0 -26213 = (-26213+0j)
  0xFAFA,   // -1286 -26182 = (-26182-1286j)
  0xF5F7,   // -2569 -26087 = (-26087-2569j)
  0xF0FA,   // -3846 -25929 = (-25929-3846j)
  0xEC06,   // -5114 -25709 = (-25709-5114j)
  0xE71F,   // -6369 -25428 = (-25428-6369j)
  0xE247,   // -7609 -25084 = (-25084-7609j)
  0xDD81,   // -8831 -24681 = (-24681-8831j)
  0xD8D1,   // -10031 -24218 = (-24218-10031j)
  0xD439,   // -11207 -23696 = (-23696-11207j)
  0xCFBB,   // -12357 -23118 = (-23118-12357j)
  0xCB5C,   // -13476 -22484 = (-22484-13476j)
  0xC71D,   // -14563 -21795 = (-21795-14563j)
  0xC301,   // -15615 -21054 = (-21054-15615j)
  0xBF0B,   // -16629 -20263 = (-20263-16629j)
  0xBB3D,   // -17603 -19422 = (-19422-17603j)
  0xB799,   // -18535 -18535 = (-18535-18535j)
  0xB422,   // -19422 -17603 = (-17603-19422j)
  0xB0D9,   // -20263 -16629 = (-16629-20263j)
  0xADC2,   // -21054 -15615 = (-15615-21054j)
  0xAADD,   // -21795 -14563 = (-14563-21795j)
  0xA82C,   // -22484 -13476 = (-13476-22484j)
  0xA5B2,   // -23118 -12357 = (-12357-23118j)
  0xA370,   // -23696 -11207 = (-11207-23696j)
  0xA166,   // -24218 -10031 = (-10031-24218j)
  0x9F97,   // -24681 -8831 = (-8831-24681j)
  0x9E04,   // -25084 -7609 = (-7609-25084j)
  0x9CAC,   // -25428 -6369 = (-6369-25428j)
  0x9B93,   // -25709 -5114 = (-5114-25709j)
  0x9AB7,   // -25929 -3846 = (-3846-25929j)
  0x9A19,   // -26087 -2569 = (-2569-26087j)
  0x99BA,   // -26182 -1286 = (-1286-26182j)
  0x999B,   // -26213     0 = -26213j
  0x99BA,   // -26182  1286 = (1286-26182j)
  0x9A19,   // -26087  2569 = (2569-26087j)
  0x9AB7,   // -25929  3846 = (3846-25929j)
  0x9B93,   // -25709  5114 = (5114-25709j)
  0x9CAC,   // -25428  6369 = (6369-25428j)
  0x9E04,   // -25084  7609 = (7609-25084j)
  0x9F97,   // -24681  8831 = (8831-24681j)
  0xA166,   // -24218 10031 = (10031-24218j)
  0xA370,   // -23696 11207 = (11207-23696j)
  0xA5B2,   // -23118 12357 = (12357-23118j)
  0xA82C,   // -22484 13476 = (13476-22484j)
  0xAADD,   // -21795 14563 = (14563-21795j)
  0xADC2,   // -21054 15615 = (15615-21054j)
  0xB0D9,   // -20263 16629 = (16629-20263j)
  0xB422,   // -19422 17603 = (17603-19422j)
  0xB799,   // -18535 18535 = (18535-18535j)
  0xBB3D,   // -17603 19422 = (19422-17603j)
  0xBF0B,   // -16629 20263 = (20263-16629j)
  0xC301,   // -15615 21054 = (21054-15615j)
  0xC71D,   // -14563 21795 = (21795-14563j)
  0xCB5C,   // -13476 22484 = (22484-13476j)
  0xCFBB,   // -12357 23118 = (23118-12357j)
  0xD439,   // -11207 23696 = (23696-11207j)
  0xD8D1,   // -10031 24218 = (24218-10031j)
  0xDD81,   // -8831 24681 = (24681-8831j)
  0xE247,   // -7609 25084 = (25084-7609j)
  0xE71F,   // -6369 25428 = (25428-6369j)
  0xEC06,   // -5114 25709 = (25709-5114j)
  0xF0FA,   // -3846 25929 = (25929-3846j)
  0xF5F7,   // -2569 26087 = (26087-2569j)
  0xFAFA,   // -1286 26182 = (26182-1286j)
};

const uint16_t test1ResGoldRe[256] = {  
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x6662,   //    -2 26210 = (6709760-512j) scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0xFFFF,   //     0    -1 = (-256+0j) scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0xFFFF,   //     0    -1 = (-256+0j) scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0xFFFF,   //     0    -1 = (-256+0j) scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0xFFFF,   //     0    -1 = (-256+0j) scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0xFFFF,   //    -1    -1 = (-256-256j) scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0xFFFF,   //     0    -1 = (-256+0j) scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0xFFFF,   //     0    -1 = (-256+0j) scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0xFFFF,   //     0    -1 = (-256+0j) scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0xFFFF,   //     0    -1 = (-256+0j) scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0xFFFF,   //     0    -1 = (-256+0j) scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0xFFFF,   //    -1    -1 = (-256-256j) scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0xFFFF,   //     0    -1 = (-256+0j) scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
};

const uint16_t test1ResGoldIm[256] = {  
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0xFFFE,   //    -2 26210 = (6709760-512j) scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0    -1 = (-256+0j) scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0    -1 = (-256+0j) scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0    -1 = (-256+0j) scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0    -1 = (-256+0j) scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0xFFFF,   //    -1    -1 = (-256-256j) scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0    -1 = (-256+0j) scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0    -1 = (-256+0j) scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0    -1 = (-256+0j) scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0    -1 = (-256+0j) scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0    -1 = (-256+0j) scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0xFFFF,   //    -1    -1 = (-256-256j) scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0    -1 = (-256+0j) scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000,   //     0     0 = 0j scaling_exp = 8
  0x0000    //     0     0 = 0j scaling_exp = 8
};

